<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="cldMenuTkes.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>104, 15</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>